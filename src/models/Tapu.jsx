/* eslint-disable no-undef */
/* eslint-disable react/prop-types */
/* eslint-disable no-unused-vars */
/* eslint-disable react/no-unknown-property */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: sudeepsingh (https://sketchfab.com/sudeepsingh)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/low-poly-house-b91b5ac0badf45e68aca37e9d6f89979
Title: Low poly house
*/

// import React, { useRef } from "react";
// import { useGLTF } from "@react-three/drei";
import React, { useRef,useEffect } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame,useThree } from "@react-three/fiber";
import {a} from '@react-spring/three';

import islandScene2 from '../assets/3d/low_poly_house.glb';

const  Tapu=({isRotating,setIsRotating,setCurrentStage,...props})=> {
    const islandRef=useRef();

    const {gl,viewport} = useThree();
  const { nodes, materials } = useGLTF(islandScene2);

  const lastX = useRef(0);
  const rotationSpeed=useRef(0);
  const dampingFactor=0.95;

  // Handle pointer (mouse or touch) down event
  const handlePointerDown = (event) => {
    event.stopPropagation();
    event.preventDefault();
    setIsRotating(true);

    // Calculate the clientX based on whether it's a touch event or a mouse event
    const clientX = event.touches ? event.touches[0].clientX : event.clientX;

    // Store the current clientX position for reference
    lastX.current = clientX;
  };

  // Handle pointer (mouse or touch) up event
  const handlePointerUp = (event) => {
    event.stopPropagation();
    event.preventDefault();
    setIsRotating(false);
  };

  // Handle pointer (mouse or touch) move event
  const handlePointerMove = (event) => {
    event.stopPropagation();
    event.preventDefault();
    if (isRotating) {
      // If rotation is enabled, calculate the change in clientX position
      const clientX = event.touches ? event.touches[0].clientX : event.clientX;

      // calculate the change in the horizontal position of the mouse cursor or touch input,
      // relative to the viewport's width
      const delta = (clientX - lastX.current) / viewport.width;

      // Update the island's rotation based on the mouse/touch movement
      if(window.innerWidth<768) {
        islandRef.current.rotation.y += delta * 0.04 * Math.PI;
       }
      else islandRef.current.rotation.y += delta * 0.01 * Math.PI;

      // Update the reference for the last clientX position
      lastX.current = clientX;

      // Update the rotation speed
      // rotationSpeed.current = delta * 0.01 * Math.PI;
     if(window.innerWidth<768) {
      rotationSpeed.current = delta * 0.1 * Math.PI;
     }
     else {
       rotationSpeed.current = delta * 0.01 * Math.PI;
     }
      
    }
  };

  // Handle keydown events
  const handleKeyDown = (event) => {
    if (event.key === "ArrowLeft") {
      if (!isRotating) setIsRotating(true);

      islandRef.current.rotation.y += 0.005 * Math.PI;
      rotationSpeed.current = 0.0125;
     
    } else if (event.key === "ArrowRight") {
      if (!isRotating) setIsRotating(true);

      islandRef.current.rotation.y -= 0.005 * Math.PI;
      rotationSpeed.current = -0.0125;
   
    }
  };

  // Handle keyup events
  const handleKeyUp = (event) => {
    if (event.key === "ArrowLeft" || event.key === "ArrowRight") {
      setIsRotating(false);
    }
  };


useEffect(() => {
  // Add event listeners for pointer and keyboard events
  const canvas = gl.domElement;
  canvas.addEventListener("pointerdown", handlePointerDown);
  canvas.addEventListener("pointerup", handlePointerUp);
  canvas.addEventListener("pointermove", handlePointerMove);
  window.addEventListener("keydown", handleKeyDown);
  window.addEventListener("keyup", handleKeyUp);

  // Remove event listeners when component unmounts
  return () => {
    canvas.removeEventListener("pointerdown", handlePointerDown);
    canvas.removeEventListener("pointerup", handlePointerUp);
    canvas.removeEventListener("pointermove", handlePointerMove);
    window.removeEventListener("keydown", handleKeyDown);
    window.removeEventListener("keyup", handleKeyUp);
  };
}, [gl, handlePointerDown, handlePointerUp, handlePointerMove,handleKeyUp,handleKeyDown]);

// This function is called on each frame update
useFrame(() => {
  // If not rotating, apply damping to slow down the rotation (smoothly)
  if (!isRotating) {
    // Apply damping factor
    rotationSpeed.current *= dampingFactor;

    // Stop rotation when speed is very small
    if (Math.abs(rotationSpeed.current) < 0.001) {
      rotationSpeed.current = 0;
    }

    islandRef.current.rotation.y += rotationSpeed.current;
  } else {
    // When rotating, determine the current stage based on island's orientation
    const rotation = islandRef.current.rotation.y;

    /**
     * Normalize the rotation value to ensure it stays within the range [0, 2 * Math.PI].
     * The goal is to ensure that the rotation value remains within a specific range to
     * prevent potential issues with very large or negative rotation values.
     *  Here's a step-by-step explanation of what this code does:
     *  1. rotation % (2 * Math.PI) calculates the remainder of the rotation value when divided
     *     by 2 * Math.PI. This essentially wraps the rotation value around once it reaches a
     *     full circle (360 degrees) so that it stays within the range of 0 to 2 * Math.PI.
     *  2. (rotation % (2 * Math.PI)) + 2 * Math.PI adds 2 * Math.PI to the result from step 1.
     *     This is done to ensure that the value remains positive and within the range of
     *     0 to 2 * Math.PI even if it was negative after the modulo operation in step 1.
     *  3. Finally, ((rotation % (2 * Math.PI)) + 2 * Math.PI) % (2 * Math.PI) applies another
     *     modulo operation to the value obtained in step 2. This step guarantees that the value
     *     always stays within the range of 0 to 2 * Math.PI, which is equivalent to a full
     *     circle in radians.
     */
    const normalizedRotation =
      ((rotation % (2 * Math.PI)) + 2 * Math.PI) % (2 * Math.PI);

    // Set the current stage based on the island's orientation
    switch (true) {
      case normalizedRotation >= 5.45 && normalizedRotation <= 5.85:
        setCurrentStage(4);
        break;
      case normalizedRotation >= 0.85 && normalizedRotation <= 1.3:
        setCurrentStage(3);
        break;
      case normalizedRotation >= 2.4 && normalizedRotation <= 2.6:
        setCurrentStage(2);
        break;
      case normalizedRotation >= 4.25 && normalizedRotation <= 4.75:
        setCurrentStage(1);
        break;
      default:
        setCurrentStage(null);
    }
  }
});









  return (
    <a.group {...props} ref={islandRef}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={3.5}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group position={[0.325, 0, 1.688]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_36.geometry}
              material={materials.Glass}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_37.geometry}
              material={materials.Wall}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_38.geometry}
              material={materials.Wood}
            />
          </group>
          <group position={[-0.262, 0, -3.522]} scale={[0.737, 0.532, 0.659]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_40.geometry}
              material={materials.Wall}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_41.geometry}
              material={materials.Wood}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_42.geometry}
              material={materials.Glass}
            />
          </group>
          <group position={[-0.378, 0, -3.064]} scale={[1, 1, 1.112]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_44.geometry}
              material={materials.Wall}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_45.geometry}
              material={materials.Shutter}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_46.geometry}
              material={materials.Wood}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_47.geometry}
              material={materials.Glass}
            />
          </group>
          <group position={[0.325, 0, 1.688]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_63.geometry}
              material={materials.Wood}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_64.geometry}
              material={materials.Glass}
            />
          </group>
          <group
            position={[0.191, 0.024, -2.257]}
            scale={[4.112, 2.419, 3.087]}
          >
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_72.geometry}
              material={materials.Asphalt}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_73.geometry}
              material={materials.greyy}
            />
          </group>
          <group position={[0.191, -0.028, -2.257]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_75.geometry}
              material={materials.Land}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_76.geometry}
              material={materials.Land}
            />
          </group>
          <group position={[4.773, 0.099, -0.641]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_82.geometry}
              material={materials.Wood}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_84.geometry}
              material={materials.Yellow}
              position={[0, 0.806, 0]}
              scale={1.273}
            />
          </group>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_4.geometry}
            material={materials.Grass}
            position={[4.159, 0.085, 4.096]}
            rotation={[0.202, 0.209, -1.304]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_6.geometry}
            material={materials.Grass}
            position={[3.923, 0.085, 2.552]}
            rotation={[0.049, 0.029, -1.045]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_8.geometry}
            material={materials.Grass}
            position={[2.007, 0.085, 5.19]}
            rotation={[0.049, 0.029, -1.045]}
            scale={1.208}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_10.geometry}
            material={materials.Grass}
            position={[4.35, 0.085, 4.803]}
            rotation={[0.049, 0.029, -1.045]}
            scale={0.804}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_12.geometry}
            material={materials.Grass}
            position={[4.557, 0.085, 2.275]}
            rotation={[0.049, 0.029, -1.045]}
            scale={0.804}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_14.geometry}
            material={materials.Grass}
            position={[4.019, 0.085, -4.034]}
            rotation={[0.131, -1.186, -0.922]}
            scale={1.084}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_16.geometry}
            material={materials.Grass}
            position={[5.172, 0.085, -0.684]}
            rotation={[0.11, 1.107, -1.142]}
            scale={0.54}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_18.geometry}
            material={materials.Grass}
            position={[4.671, 0.085, 0.337]}
            rotation={[2.64, -1.468, 1.599]}
            scale={1.004}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_20.geometry}
            material={materials.Grass}
            position={[3.041, 0.085, 0.655]}
            rotation={[2.64, -1.468, 1.599]}
            scale={1.198}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_22.geometry}
            material={materials.Grass}
            position={[3.041, 0.085, 0.152]}
            rotation={[2.64, -1.468, 1.599]}
            scale={1.061}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_24.geometry}
            material={materials.Grass}
            position={[2.969, 0.085, 2.552]}
            rotation={[0.049, 0.029, -1.045]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_26.geometry}
            material={materials.Grass}
            position={[2.919, 0.085, -4.858]}
            rotation={[0.131, -1.186, -0.922]}
            scale={0.927}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_28.geometry}
            material={materials.Grass}
            position={[-2.909, 0.085, 4.056]}
            rotation={[0.049, 0.029, -1.045]}
            scale={1.52}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_30.geometry}
            material={materials.Grass}
            position={[4.7, 0.085, -0.25]}
            rotation={[2.64, -1.468, 1.599]}
            scale={0.599}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_32.geometry}
            material={materials.material}
            position={[-2.872, -0.269, 4.669]}
            scale={51.569}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_34.geometry}
            material={materials.Grass}
            position={[2.514, 0.263, 3.971]}
            scale={0.282}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_49.geometry}
            material={materials.Roof1}
            position={[0.325, 4.176, 1.688]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_51.geometry}
            material={materials.Roof1}
            position={[0.35, 3.601, -2.631]}
            scale={[0.737, 0.532, 0.659]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_53.geometry}
            material={materials.Roof1}
            position={[2.521, 2.298, -2.313]}
            scale={[0.709, 0.454, 0.543]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_55.geometry}
            material={materials.material_0}
            position={[0.33, 0.232, 4.508]}
            scale={[1.004, 1.098, 1.33]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_57.geometry}
            material={materials.Roof_under}
            position={[0.325, 4.176, 1.688]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_59.geometry}
            material={materials.Roof_under}
            position={[2.521, 2.161, -2.313]}
            scale={[0.709, 0.454, 0.543]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_61.geometry}
            material={materials.Roof_under}
            position={[0.35, 3.596, -2.631]}
            scale={[0.737, 0.532, 0.659]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_66.geometry}
            material={materials.Grey_stone}
            position={[0.325, 0, 1.688]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_68.geometry}
            material={materials.Grey_stone}
            position={[0.325, 0, 1.688]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_70.geometry}
            material={materials.Metal}
            position={[3.356, 0.341, -1.48]}
            rotation={[0, 0, -Math.PI / 2]}
            scale={[-0.03, 0.087, 0.142]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_78.geometry}
            material={materials.Grey_stone}
            position={[2.288, 1.872, 1.671]}
            rotation={[0, 0, -Math.PI / 2]}
            scale={[1.305, 1, 1]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_80.geometry}
            material={materials.material_0}
            position={[2.156, 3.648, 0.12]}
            rotation={[0, 0, -Math.PI / 2]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_86.geometry}
            material={materials.Metal}
            position={[1.943, 0.857, 1.893]}
            scale={0.07}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_88.geometry}
            material={materials.Grey_stone}
            position={[0.062, 5.222, 4.41]}
            rotation={[0, Math.PI / 2, 0]}
            scale={[0.628, 1, 0.821]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_90.geometry}
            material={materials.Tilel}
            position={[2.301, 4.062, 3.815]}
            rotation={[0.017, -0.004, -0.556]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_92.geometry}
            material={materials.Tilel}
            position={[1.374, 4.645, 3.396]}
            rotation={[0.005, 0.003, -0.552]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_94.geometry}
            material={materials.Tilel}
            position={[1.05, 4.841, 3.599]}
            rotation={[0.019, -0.005, -0.55]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_96.geometry}
            material={materials.Tilel}
            position={[1.803, 4.386, 1.572]}
            rotation={[0, 0.006, -0.552]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_98.geometry}
            material={materials.Tilel}
            position={[1.793, 4.39, 2.265]}
            rotation={[0.005, 0.003, -0.552]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_100.geometry}
            material={materials.Tilel}
            position={[1.466, 4.593, 1.917]}
            rotation={[0.005, 0.003, -0.552]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_102.geometry}
            material={materials.Tilel}
            position={[2.276, 4.087, 0.357]}
            rotation={[0.001, 0.006, -0.561]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_104.geometry}
            material={materials.Tilel}
            position={[1.965, 4.28, -0.03]}
            rotation={[0, 0.006, -0.56]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_106.geometry}
            material={materials.Tilel}
            position={[-1.351, 4.255, 3.624]}
            rotation={[0.02, 0.003, 0.56]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_108.geometry}
            material={materials.Tilel}
            position={[-1.027, 4.459, 3.335]}
            rotation={[0.007, -0.005, 0.552]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_110.geometry}
            material={materials.Tilel}
            position={[-1.415, 4.219, 0.075]}
            rotation={[0.002, -0.008, 0.56]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_112.geometry}
            material={materials.Tilel}
            position={[-1.08, 4.422, -0.283]}
            rotation={[-0.012, -0.017, 0.552]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_114.geometry}
            material={materials.Tilel}
            position={[-0.027, 5.073, 0.85]}
            rotation={[0.002, -0.008, 0.536]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_116.geometry}
            material={materials.Tilel}
            position={[-0.022, 5.073, 0.115]}
            rotation={[0.002, -0.008, 0.538]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_118.geometry}
            material={materials.Tilel}
            position={[-0.353, 4.875, 0.565]}
            rotation={[0.002, -0.008, 0.55]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_120.geometry}
            material={materials.Tilel}
            position={[-0.002, 5.085, 3.401]}
            rotation={[0.007, -0.006, 0.538]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_122.geometry}
            material={materials.Tilel}
            position={[-0.005, 5.086, 2.716]}
            rotation={[0.007, -0.006, 0.538]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_124.geometry}
            material={materials.Tilel}
            position={[-0.341, 4.881, 3.062]}
            rotation={[0.007, -0.005, 0.55]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_126.geometry}
            material={materials.Tilel}
            position={[3.196, 2.259, -1.045]}
            rotation={[0.353, 1.567, 0]}
            scale={0.861}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_128.geometry}
            material={materials.Tilel}
            position={[2.909, 2.372, -1.351]}
            rotation={[0.353, 1.567, 0]}
            scale={0.861}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_130.geometry}
            material={materials.Tilel}
            position={[3.216, 2.502, -2.921]}
            rotation={[-0.352, 1.567, 0]}
            scale={0.861}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_132.geometry}
            material={materials.Tilel}
            position={[2.856, 2.379, -3.256]}
            rotation={[-0.353, 1.567, 0]}
            scale={0.861}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_134.geometry}
            material={materials.Tilel}
            position={[1.613, 3.455, -3.844]}
            rotation={[-0.001, -0.003, -0.432]}
            scale={0.861}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_136.geometry}
            material={materials.Tilel}
            position={[1.327, 3.587, -3.691]}
            rotation={[-0.001, -0.003, -0.432]}
            scale={0.861}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_138.geometry}
            material={materials.Tilel}
            position={[0.808, 3.814, -2.027]}
            rotation={[-0.001, -0.003, -0.406]}
            scale={0.861}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_140.geometry}
            material={materials.Tilel}
            position={[1.125, 3.678, -2.379]}
            rotation={[-0.001, -0.003, -0.406]}
            scale={0.861}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_142.geometry}
            material={materials.Tilel}
            position={[1.68, 3.424, -1.728]}
            rotation={[-0.001, -0.003, -0.432]}
            scale={0.861}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_144.geometry}
            material={materials.Tilel}
            position={[1.389, 3.558, -1.358]}
            rotation={[-0.001, -0.003, -0.432]}
            scale={0.861}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_146.geometry}
            material={materials.Tilel}
            position={[-0.082, 3.825, -4]}
            rotation={[0.001, -0.003, 0.406]}
            scale={0.861}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_148.geometry}
            material={materials.Tilel}
            position={[-0.416, 3.681, -3.7]}
            rotation={[0.001, -0.003, 0.406]}
            scale={0.861}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_150.geometry}
            material={materials.material_0}
            position={[-0.179, 3.784, -1.824]}
            rotation={[0.001, -0.003, 0.406]}
            scale={0.861}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_152.geometry}
            material={materials.material_0}
            position={[-0.496, 3.647, -1.428]}
            rotation={[0.001, -0.003, 0.432]}
            scale={0.861}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_154.geometry}
            material={materials.Metal}
            position={[0.442, 5.182, -0.4]}
            scale={0.288}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_156.geometry}
            material={materials.Metal}
            position={[0.45, 5.886, -0.403]}
            rotation={[0, 0, -Math.PI / 2]}
            scale={[1.479, 1, 1]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_158.geometry}
            material={materials.material_0}
            position={[0.469, 6.451, -0.403]}
            scale={0.086}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_160.geometry}
            material={materials.material_0}
            position={[0.521, 6.451, -0.403]}
            scale={0.086}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_162.geometry}
            material={materials.material_0}
            position={[2.259, 0.175, 1.692]}
            scale={[0.105, 0.105, 0.273]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_164.geometry}
            material={materials.Black}
            position={[0.608, 6.438, -0.379]}
          />
        </group>
      </group>
    </a.group>
  );
}

export default Tapu;
